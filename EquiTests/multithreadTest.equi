function fibbMT : (int n) -> int
{
	if (n == 0)
	{
		int r = 0;
		return r;
	}
	else if (n == 1)
	{
		int r = 1;
		return r;
	}

	future r = ((n - 1) -> fibbMT);
	future s = ((n - 2) -> fibbMT);
	int rI = r.get();
	int sI = s.get();
	return sI + rI;
}

function fibbST : (int n) -> int
{
	if (n == 0)
	{
		int r = 0;
		return r;
	}
	else if (n == 1)
	{
		int r = 1;
		return r;
	}
	int rI = fibbST(n-1);
	int sI = fibbST(n-2);
	return sI + rI;
}

bool good = true;

for (int i = 0; i < 10; i++)
{
	future mtF = i -> fibbMT;
	int st = fibbST(i);
	int mt = mtF.get();
	if (st != mt)
	{
		print("ERROR on i=%i: single thread fibb says %i, multithreaded says %i", i, st, mt);
		good = false;
	}
}


if (!good)
	throw("Bad");

print("Test successful");
